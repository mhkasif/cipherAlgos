{"version":3,"sources":["utils/ShiftCipherCalc.js","Component/Card/Nav/Nav.js","Ciphers/Ciphers.js","Component/Card/DropDown/DropDown.js","Component/Card/TextAreas/TextAreas.js","utils/VigenereCipherCalc.js","utils/substitutionCipher.js","utils/playFairCipher.js","Component/Card/Button/Buttons.js","Component/Key/Key.js","Component/Key/SubstitutionKey.js","Component/Card/MainCard.js","App.js","serviceWorker.js","index.js"],"names":["Nav","text","className","toUpperCase","Ciphers","key","value","DropDown","handleCipherTypeChange","Dropdown","onChange","e","d","style","width","placeholder","selection","options","TextAreas","plainText","cipherText","onTextChange","Form","margin","padding","height","marginTop","textAlign","TextArea","name","rows","alphabetsArray","i","charCodeAt","push","String","fromCharCode","randomArray","Alphabets","length","char","Math","floor","random","includes","randomKey","matrix","array","Array","create2DArray","playFairCipherMatrix","noSpaceKey","toLowerCase","replace","keyLength","keyInit","alphabetInit","j","flat","Buttons","error","onEncrypt","onReset","onDecrypt","cipherType","keyVal","Button","onClick","keyArray","split","textArray","cipherTextArray","newChar","indexOf","console","log","vigenereCipherEncryptCalc","spaceIndex","specialChar","map","c","idx","match","textArrayWithNoSpace","slice","pairs","pairsLoop","pair","pair0","row","col","pair1","pairLoop","colTemp","PlayFairCipherEncrypt","reduce","accumulator","textChar","val","Number","shiftCipherEncryptCalc","disabled","content","primary","t","vigenereCipherDecryptCalc","abs","toString","PlayFairCipherDecrypt","shiftCipherDecryptCalc","color","type","onInputChange","Input","label","max","min","SubstitutionKey","Table","compact","celled","definition","Body","Row","Cell","collapsing","alp","MainCard","this","props","animation","duration","visible","Transition","Card","Key","Component","App","state","setState","target","lastChar","isNaN","undefined","toggleVisibility","prevState","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ce07246.chunk.js","sourcesContent":["const alphabetsArray = [];\nfor (var i = \"a\".charCodeAt(0); i <= \"z\".charCodeAt(0); i++) {\n  alphabetsArray.push(String.fromCharCode(i));\n}\nexport const shiftCipherEncryptCalc = (text, key) => {\n  const textArray = text.split(\"\");\n  let cipherTextArray = \"\";\n  for (var i = 0; i < text.length; i++) {\n    if (textArray[i] !== \" \") {\n      const newChar = (alphabetsArray.indexOf(textArray[i]) + Number(key)) % 26;\n      cipherTextArray += alphabetsArray[newChar];\n    } else {\n      cipherTextArray += \" \";\n    }\n  }\n\n  return cipherTextArray;\n};\nexport const shiftCipherDecryptCalc = (text, key) => {\n\n  const textArray = text.split(\"\");\n  let cipherTextArray = \"\";\n  for (var i = 0; i < text.length; i++) {\n    if (textArray[i] === \" \") {\n      cipherTextArray += \" \";\n    } else if (alphabetsArray.indexOf(textArray[i]) - Number(key) < 0) {\n      const newChar =\n        (alphabetsArray.indexOf(textArray[i]) - Number(key) + 26) % 26;\n      cipherTextArray += alphabetsArray[newChar];\n    } else if (textArray[i] !== \" \") {\n      const newChar = (alphabetsArray.indexOf(textArray[i]) - Number(key)) % 26;\n      cipherTextArray += alphabetsArray[newChar];\n    }\n  }\n\n  return cipherTextArray;\n};\n","import React from \"react\";\nimport \"../../../styles/Nav.scss\";\nconst Nav = ({ text }) => {\n  return <div className=\"nav\">{text?text.toUpperCase():'Cryptonic'}</div>;\n};\n\nexport default Nav;\n","export const Ciphers = [\n  {\n    key: \"shiftCipher\",\n    text: \"shift Cipher\",\n    value: \"shift cipher\",\n\n  },\n  {\n    key: \"vigenereCipher\",\n    text: \"vigenere Cipher\",\n    value: \"vigenere cipher\"\n  },\n  {\n    key: \"substitutionCipher\",\n    text: \"substitutionCipher\",\n    value: \"substitution cipher\"\n  },\n  {\n    key: \"playFairCipher\",\n    text: \"playFair Cipher\",\n    value: \"playFair cipher\"\n  }\n];\n","import React from \"react\";\n\nimport { Dropdown } from \"semantic-ui-react\";\nimport { Ciphers } from \"../../../Ciphers/Ciphers\";\nimport \"../../../styles/dropdown.scss\";\nconst DropDown = ({ handleCipherTypeChange }) => (\n  <div className=\"dropdown\">\n    <Dropdown\n      onChange={(e, d) => handleCipherTypeChange(d.value)}\n      style={{ width: \"50%\" }}\n      placeholder=\"Select Cipher\"\n      selection\n      options={Ciphers}\n    />\n  </div>\n);\n\nexport default DropDown;\n","import React from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport { TextArea } from \"semantic-ui-react\";\nimport \"../../../styles/text-area-container.scss\";\nconst TextAreas = ({ plainText, cipherText, onTextChange }) => {\n  return (\n    <Form style={{ margin: \"0px\", padding: \"0px\", height: \"100%\" }}>\n      <div className=\"labels\">\n        <h3 style={{ marginTop: \"40px\", width: \"40vw\", textAlign: \"center\" }}>\n          Plain Text\n        </h3>\n        <h3 style={{ marginTop: \"40px\", width: \"40vw\", textAlign: \"center\" }}>\n          Cipher Text\n        </h3>\n      </div>\n      <div className=\"text-area-container\">\n        <TextArea\n          name=\"plainText\"\n          style={{ width: \"45%\", height: \"150%\" }}\n          rows={8}\n          placeholder=\"Write Plain Text Here\"\n          onChange={onTextChange}\n          value={plainText}\n        />\n        <TextArea\n          onChange={onTextChange}\n          name=\"cipherText\"\n          value={cipherText}\n          style={{ width: \"45%\", height: \"150%\" }}\n          rows={8}\n          placeholder=\"Cypher Text To Be Here\"\n        />\n      </div>\n    </Form>\n  );\n};\n\nexport default TextAreas;\n","const alphabetsArray = [];\nfor (var i = \"a\".charCodeAt(0); i <= \"z\".charCodeAt(0); i++) {\n  alphabetsArray.push(String.fromCharCode(i));\n}\nexport const vigenereCipherEncryptCalc = (text, key) => {\n  const keyArray = key.split(\"\");\n  const textArray = text.split(\"\");\n  let cipherTextArray = \"\";\n  var j = 0;\n  for (var i = 0; i < text.length; i++) {\n    if (textArray[i] !== \" \") {\n      const newChar =\n        (alphabetsArray.indexOf(textArray[i]) +\n          alphabetsArray.indexOf(keyArray[j % keyArray.length])) %\n        26;\n      cipherTextArray += alphabetsArray[newChar];\n      j++;\n    } else {\n      cipherTextArray += \" \";\n    }\n  }\n  console.log(cipherTextArray);\n\n  return cipherTextArray;\n};\nexport const vigenereCipherDecryptCalc = (text, key) => {\n  const keyArray = key.split(\"\");\n  const textArray = text.split(\"\");\n  let cipherTextArray = \"\";\n  var t = 0;\n\n  for (var i = 0; i < text.length; i++) {\n    if (textArray[i] === \" \") {\n\n        cipherTextArray += \" \";\n\n    }\n    else if (\n      alphabetsArray.indexOf(textArray[i]) -\n        alphabetsArray.indexOf(keyArray[t % keyArray.length]) <\n      0\n    ) {\n      const newChar =\n        (alphabetsArray.indexOf(textArray[i]) -\n          alphabetsArray.indexOf(keyArray[t % keyArray.length]) +\n          26) %\n        26;\n      cipherTextArray += alphabetsArray[newChar];\n      t++;\n    } else if (textArray[i] !== \" \") {\n      const newChar =\n        (alphabetsArray.indexOf(textArray[i]) -\n          alphabetsArray.indexOf(keyArray[t % keyArray.length])) %\n        26;\n      cipherTextArray += alphabetsArray[newChar];\n      t++;\n    }\n  }\n\n  return cipherTextArray;\n};\n","export const randomArray = [];\nexport const Alphabets = [\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\"\n];\nconst randomKey = () => {\n  while (randomArray.length < 26) {\n    let char = Math.floor(Math.random() * Alphabets.length);\n    if (!randomArray.includes(Alphabets[char]))\n      randomArray.push(Alphabets[char]);\n  }\n};\n\nrandomKey();\nexport const substitutionEncryptCipher = text => {\n  const textArray = text.split(\"\");\n  return textArray.reduce((accumulator, textChar) => {\n    const val = Alphabets.indexOf(textChar);\n    const char = randomArray[val] || \" \";\n    return accumulator + char;\n  }, \"\");\n};\nexport const substitutionDecryptCipher = text => {\n  const textArray = text.split(\"\");\n  return textArray.reduce((accumulator, textChar) => {\n    const val = randomArray.indexOf(textChar);\n    const char = Alphabets[val] || \" \";\n    return accumulator + char;\n  }, \"\");\n};\n","function create2DArray() {\n  let array = new Array(5);\n\n  for (let i = 0; i < 5; i++) {\n    array[i] = new Array(5);\n  }\n\n  return array;\n}\nlet matrix = create2DArray();\n\nexport const playFairCipherMatrix = key => {\n  const noSpaceKey = key.toLowerCase().replace(/\\s/g, \"\");\n  const keyLength = noSpaceKey.length;\n  let keyInit = 0;\n  let alphabetInit = 97;\n  for (let i = 0; i < 5; i++) {\n    for (let j = 0; j < 5; j++) {\n      if (keyInit < keyLength) {\n        if (\n          matrix.flat().includes(noSpaceKey[keyInit]) ||\n          noSpaceKey[keyInit] === \"j\"\n        ) {\n          keyInit++;\n          --j;\n        } else matrix[i][j] = noSpaceKey[keyInit++];\n      } else if (\n        matrix.flat().includes(String.fromCharCode(alphabetInit)) ||\n        String.fromCharCode(alphabetInit) === \"j\"\n      ) {\n        alphabetInit++;\n        j--;\n      } else {\n        matrix[i][j] = String.fromCharCode(alphabetInit++);\n      }\n    }\n  }\n};\nexport const PlayFairCipherEncrypt = (text, key) => {\n  text = text.toLowerCase();\n  text = text.replace(/[^\\s a-z]/g, \"\");\n  text = text.replace(/  +/g, \" \");\n\n  console.log(text);\n  const spaceIndex = [];\n  const specialChar = [];\n  playFairCipherMatrix(key);\n  let cipherText = \"\";\n  text.split(\"\").map((c, idx) => {\n    if (c === \" \") {\n      spaceIndex.push(idx);\n    } else if (c.match(/[^a-z]/g)) {\n      specialChar.push([c, idx]);\n    }\n    // return specialChar\n  });\n  let textArrayWithNoSpace = text.replace(/\\s/g, \"\");\n\n  for (let i = 0; i < textArrayWithNoSpace.length - 1; i++) {\n    if (textArrayWithNoSpace[i] === textArrayWithNoSpace[i + 1])\n      textArrayWithNoSpace =\n        textArrayWithNoSpace.slice(0, i + 1) +\n        \"x\" +\n        textArrayWithNoSpace.slice(i + 1);\n  }\n\n  if (textArrayWithNoSpace.length % 2 !== 0) {\n    textArrayWithNoSpace += \"x\";\n  }\n  textArrayWithNoSpace = textArrayWithNoSpace.replace(/j/g, \"i\");\n  let pairs = textArrayWithNoSpace.match(/.{1,2}/g);\n  console.log(pairs.length);\n  for (let pairsLoop = 0; pairsLoop < pairs.length; pairsLoop++) {\n    let pair = pairs[pairsLoop];\n    let pair0 = {\n      row: 0,\n      col: 0\n    };\n    let pair1 = {\n      row: 0,\n      col: 0\n    };\n    for (let pairLoop = 0; pairLoop < pair.length; pairLoop++) {\n      for (let row = 0; row < 5; row++) {\n        for (let col = 0; col < 5; col++) {\n          if (pair[pairLoop] === matrix[row][col]) {\n            if (pairLoop === 0) {\n              pair0.row = row;\n              pair0.col = col;\n            } else {\n              pair1.row = row;\n              pair1.col = col;\n            }\n          }\n        }\n      }\n    }\n    //if they are on diagnoal\n    if (pair0.row !== pair1.row && pair0.col !== pair1.col) {\n      //swap col\n      let colTemp = pair0.col;\n      pair0.col = pair1.col;\n      pair1.col = colTemp;\n    }\n    //if they are on same row\n    if (pair0.row === pair1.row) {\n      pair0.col = (pair0.col + 1) % 5;\n      pair1.col = (pair1.col + 1) % 5;\n    }\n    //if they are on same col\n    if (pair0.col === pair1.col) {\n      pair0.row = (pair0.row + 1) % 5;\n      pair1.row = (pair1.row + 1) % 5;\n    }\n    cipherText += matrix[pair0.row][pair0.col];\n    cipherText += matrix[pair1.row][pair1.col];\n  }\n  //place space in sentence as provided in original text\n  for (let i = 0; i < spaceIndex.length; i++) {\n    cipherText =\n      cipherText.slice(0, spaceIndex[i]) +\n      \" \" +\n      cipherText.slice(spaceIndex[i]);\n  }\n  //place special char in sentence as provided in original text\n  // console.log(specialChar);\n  // for (let i = 0; i < specialChar.length; i++) {\n  //   cipherText =\n  //     cipherText.slice(0, specialChar[i][1]) +\n  //     specialChar[i][0] +\n  //     cipherText.slice(specialChar[i][1]);\n  // }\n  // if (cipherText % 2 !== 0) {\n  //   cipherText = cipherText.slice(0, cipherText.length - 1).toString();\n  // }\n\n  return cipherText;\n};\nexport const PlayFairCipherDecrypt = (text, key) => {\n  text = text.toLowerCase();\n\n  const spaceIndex = [];\n  playFairCipherMatrix(key);\n  let plainText = \"\";\n  text.split(\"\").map((c, idx) => {\n    if (c === \" \") {\n      return spaceIndex.push(idx);\n    } else if (c.match(/[^a-z]/g)) {\n      return specialChar.push([c, idx]);\n    }\n    return spaceIndex;\n  });\n\n  let textArrayWithNoSpace = text.replace(/\\s/g, \"\");\n\n  let pairs = textArrayWithNoSpace.match(/.{1,2}/g);\n\n  for (let pairsLoop = 0; pairsLoop < pairs.length; pairsLoop++) {\n    let pair = pairs[pairsLoop];\n    let pair0 = {\n      row: 0,\n      col: 0\n    };\n    let pair1 = {\n      row: 0,\n      col: 0\n    };\n    for (let pairLoop = 0; pairLoop < pair.length; pairLoop++) {\n      for (let row = 0; row < 5; row++) {\n        for (let col = 0; col < 5; col++) {\n          if (pair[pairLoop] === matrix[row][col]) {\n            if (pairLoop === 0) {\n              pair0.row = row;\n              pair0.col = col;\n            } else {\n              pair1.row = row;\n              pair1.col = col;\n            }\n          }\n        }\n      }\n    }\n    //if they are on diagnoal\n    if (pair0.row !== pair1.row && pair0.col !== pair1.col) {\n      //swap col\n      let colTemp = pair0.col;\n      pair0.col = pair1.col;\n      pair1.col = colTemp;\n    }\n    //if they are on same row\n    if (pair0.row === pair1.row) {\n      if ((pair0.col - 1) % 5 < 0 || (pair1.col - 1) % 5 < 0) {\n        pair0.col = (pair0.col - 1 + 5) % 5;\n        pair1.col = (pair1.col - 1 + 5) % 5;\n      } else {\n        pair0.col = Math.abs((pair0.col - 1) % 5);\n        pair1.col = Math.abs((pair1.col - 1) % 5);\n      }\n    }\n    //if they are on same col\n    if (pair0.col === pair1.col) {\n      if ((pair0.row - 1) % 5 < 0 || (pair1.row - 1) % 5 < 0) {\n        pair0.row = (pair0.row - 1 + 5) % 5;\n        pair1.row = (pair1.row - 1 + 5) % 5;\n      } else {\n        pair0.row = Math.abs((pair0.row - 1) % 5);\n        pair1.row = Math.abs((pair1.row - 1) % 5);\n      }\n    }\n    plainText += matrix[pair0.row][pair0.col];\n    plainText += matrix[pair1.row][pair1.col];\n  }\n\n  const specialChar = [];\n\n  //place special char in sentence as provided in original text\n  // for (let i = 0; i < specialChar.length; i++) {\n  //   plainText =\n  //     plainText.slice(0, spaceIndex[i][1]) +\n  //     specialChar[i][0] +\n  //     plainText.slice(spaceIndex[i][1]);\n  // }\n  //showing all cipher except last aplhabet x\n  //remove last x\n\n  if (plainText.length % 2 === 0) {\n    plainText = plainText.slice(0, plainText.length - 1).toString();\n  }\n  // remove x\n  for (let i = 0; i < plainText.length - 2; i++) {\n    if (plainText[i] === plainText[i + 2] && plainText[i + 1] === \"x\")\n      plainText = plainText.slice(0, i + 1) + plainText.slice(i + 2);\n  }\n\n  // place space in sentence as provided in original text\n  for (let i = 0; i < spaceIndex.length; i++) {\n    plainText =\n      plainText.slice(0, spaceIndex[i]) + \" \" + plainText.slice(spaceIndex[i]);\n  }\n\n  // if (textArrayWithNoSpace.length % 2 !== 0) {\n  //   textArrayWithNoSpace += \"x\";\n  // }\n  plainText = plainText.replace(/i/g, \"j\");\n  return plainText;\n};\n//joel enjoys programming at friday nights ! yay\n// joel enjoys programming at friday nights ! yay\n// questionauthority\n\n// onsk nboncu qfyvcilzfho kh spfhro caomoq t cocv\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport \"../../../styles/button.scss\";\nimport {\n  shiftCipherEncryptCalc,\n  shiftCipherDecryptCalc\n} from \"../../../utils/ShiftCipherCalc\";\nimport {\n  vigenereCipherEncryptCalc,\n  vigenereCipherDecryptCalc\n} from \"../../../utils/VigenereCipherCalc\";\nimport {\n  substitutionEncryptCipher,\n  substitutionDecryptCipher\n} from \"../../../utils/substitutionCipher\";\nimport {\n  PlayFairCipherEncrypt,\n  PlayFairCipherDecrypt\n} from \"../../../utils/playFairCipher\";\nconst Buttons = ({\n  error,\n  onEncrypt,\n  onReset,\n  onDecrypt,\n  cipherType,\n  keyVal,\n  plainText,\n  cipherText\n}) => {\n  const CurrentEncryptCipher = () => {\n    switch (cipherType) {\n      case \"vigenere cipher\":\n        onEncrypt(vigenereCipherEncryptCalc(plainText, keyVal));\n\n        break;\n\n      case \"playFair cipher\":\n        onEncrypt(PlayFairCipherEncrypt(plainText, keyVal));\n        break;\n      case \"substitution cipher\":\n        onEncrypt(substitutionEncryptCipher(plainText));\n        break;\n\n      default:\n        onEncrypt(shiftCipherEncryptCalc(plainText, keyVal));\n    }\n  };\n  const CurrentDecryptCipher = () => {\n    switch (cipherType) {\n      case \"vigenere cipher\":\n        onDecrypt(vigenereCipherDecryptCalc(cipherText, keyVal));\n\n        break;\n\n      case \"playFair cipher\":\n\n        onDecrypt(PlayFairCipherDecrypt(cipherText, keyVal));\n        break;\n      case \"substitution cipher\":\n        onDecrypt(substitutionDecryptCipher(cipherText));\n        break;\n\n      default:\n        onDecrypt(shiftCipherDecryptCalc(cipherText, keyVal));\n        break;\n    }\n  };\n  return (\n    <div className=\"button-div\">\n      <Button\n        onClick={CurrentEncryptCipher}\n        disabled={error}\n        style={{ margin: \"50px\" }}\n        content=\"encrypt\"\n        primary\n      />\n      <Button\n        onClick={CurrentDecryptCipher}\n        disabled={error}\n        style={{ margin: \"50px\" }}\n        content=\"Decrypt\"\n        color=\"teal\"\n      />\n      <Button onClick={onReset} style={{ margin: \"50px\" }} content=\"Reset\" />\n    </div>\n  );\n};\n\nexport default Buttons;\n","import React from \"react\";\nimport { Input } from \"semantic-ui-react\";\n\nimport \"../../styles/key.scss\";\n\nconst keyVal = ({ type, keyVal, onInputChange, error }) => {\n  return (\n    <div className=\"input\">\n      {type ? (\n        <Input\n          value={keyVal}\n          label=\"KEY\"\n          error={error}\n          onChange={onInputChange}\n          type=\"number\"\n          max=\"25\"\n          min=\"0\"\n        />\n      ) : (\n        <Input value={keyVal} label=\"KEY\" error={error} onChange={onInputChange} />\n      )}\n    </div>\n  );\n};\n\nexport default keyVal;\n","import React from \"react\";\nimport { Table } from \"semantic-ui-react\";\nimport { Alphabets, randomArray } from \"../../utils/substitutionCipher\";\n\nexport const SubstitutionKey = () => {\n  return (\n    <Table compact celled definition>\n      <Table.Body>\n        <Table.Row>\n          <Table.Cell collapsing>ALPHABETS</Table.Cell>\n\n          {Alphabets.map(alp => (\n            <Table.Cell key={Math.random() * 12 * 77}>{alp}</Table.Cell>\n          ))}\n        </Table.Row>\n        <Table.Row>\n          <Table.Cell collapsing>KEY</Table.Cell>\n          {randomArray.map(alp => (\n            <Table.Cell key={Math.random() * 12 * 33}>{alp}</Table.Cell>\n          ))}\n        </Table.Row>\n      </Table.Body>\n    </Table>\n  );\n};\n\nexport default SubstitutionKey;\n","import React, { Component } from \"react\";\nimport { Transition } from \"semantic-ui-react\";\nimport { Card } from \"semantic-ui-react\";\nimport Nav from \"./Nav/Nav\";\nimport DropDown from \"./DropDown/DropDown\";\nimport TextAreas from \"./TextAreas/TextAreas\";\nimport \"../../styles/main-card.scss\";\nimport Buttons from \"./Button/Buttons\";\nimport Key from \"../Key/Key\";\nimport { SubstitutionKey } from \"../Key/SubstitutionKey\";\n\nexport default class MainCard extends Component {\n  render() {\n    const {\n      cipherType,\n      cipherText,\n      plainText,\n      error,\n      onReset,\n      onTextChange,\n      keyVal,\n      onInputChange,\n      handleCipherTypeChange,\n      onEncrypt,\n      onDecrypt,\n      animation,\n      duration,\n      visible\n    } = this.props;\n\n    return (\n      <Transition animation={animation} duration={duration} visible={visible}>\n        <Card style={{ width: \"70vw\", height: \"70vh\" }}>\n          <Nav text={cipherType} />\n          <DropDown handleCipherTypeChange={handleCipherTypeChange} />\n          {cipherType === \"substitution cipher\" ? (\n            <SubstitutionKey />\n          ) : (\n            <Key\n              type={cipherType === \"shift cipher\" ? \"number\" : \"\"}\n              keyVal={keyVal}\n              onInputChange={onInputChange}\n              error={error}\n            />\n          )}\n          <TextAreas\n            onTextChange={onTextChange}\n            cipherText={cipherText}\n            plainText={plainText}\n          />\n          <Buttons\n            plainText={plainText}\n            cipherText={cipherText}\n            keyVal={keyVal}\n            onEncrypt={onEncrypt}\n            onDecrypt={onDecrypt}\n            cipherType={cipherType}\n            error={error}\n            onReset={onReset}\n          />\n        </Card>\n      </Transition>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport \"./App.scss\";\nimport MainCard from \"./Component/Card/MainCard\";\n\nexport default class App extends Component {\n  state = {\n    cipherType: \"\",\n    keyVal: '',\n    plainText: \"\",\n    cipherText: \"\",\n    error: true,\n    animation: \"tada\",\n    duration: 500,\n    visible: true\n  };\n  handleCipherTypeChange = cipherType => {\n    this.setState({\n      cipherType\n    });\n  };\n  onTextChange = e => {\n    const { name, value } = e.target;\n    const lastChar = value[value.length - 1];\n    if (isNaN(lastChar) || ' ')\n      this.setState({\n        [name]: value,\n        error: false\n      });\n    else {\n      this.toggleVisibility();\n    }\n  };\n  onReset = () => {\n    this.setState({\n      keyVal: undefined,\n      plainText: \"\",\n      cipherText: \"\",\n      error: true\n    });\n  };\n  onInputChange = e => {\n    const { value } = e.target;\n    const lastChar = value[value.length - 1];\n\n    if (this.state.cipherType === \"shift cipher\") {\n      if (value < 26 && value >= 0) {\n        this.setState({\n          keyVal: value,\n          error: false\n        });\n      } else {\n        this.toggleVisibility();\n        this.setState({\n          error: true\n        });\n      }\n    } else if (isNaN(lastChar)) {\n      this.setState({\n        keyVal: value,\n        error: false\n      });\n    }else{\n      this.toggleVisibility();\n\n    }\n  };\n  onEncrypt = cipherText => {\n    // const { text, keyVal } = this.state;\n    this.setState({\n      cipherText\n    });\n  };\n  onDecrypt = plainText => {\n    // const { keyVal, cipherValue } = this.state;\n    this.setState({\n      plainText\n    });\n  };\n  toggleVisibility = () =>\n    this.setState(prevState => ({ visible: !prevState.visible }));\n  render() {\n    const {\n      cipherType,\n      keyVal,\n      cipherText,\n      plainText,\n      animation,\n      duration,\n      visible\n    } = this.state;\n\n    return (\n      <div className=\"app\">\n        <MainCard\n          animation={animation}\n          duration={duration}\n          visible={visible}\n          keyVal={keyVal}\n          plainText={plainText}\n          onInputChange={this.onInputChange}\n          cipherType={cipherType}\n          onTextChange={this.onTextChange}\n          onReset={this.onReset}\n          cipherText={cipherText}\n          handleCipherTypeChange={this.handleCipherTypeChange}\n          onEncrypt={this.onEncrypt}\n          onDecrypt={this.onDecrypt}\n        />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}