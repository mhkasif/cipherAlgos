{"version":3,"sources":["assets/bgimage.gif","utils/ShiftCipherCalc.js","Components/Button/Buttons.js","utils/VigenereCipherCalc.js","Components/ShiftCipher/ShiftCipher.js","Components/VigenereCipher/VignereCipher.js","Components/Main/Main.js","Components/BackgroundImage/BackgroundImage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Buttons","error","encrypt","reset","decrypt","className","Button","onClick","disabled","style","margin","content","primary","color","alphabetsArray","i","charCodeAt","push","String","fromCharCode","shiftCipherEncryptCalc","text","key","textArray","split","cipherTextArray","length","newChar","indexOf","Number","shiftCipherDecryptCalc","ShiftCipher","state","cipherValue","onTextChange","e","target","name","value","setState","onInputChange","console","log","onReset","onEncrypt","toLowerCase","onDecrypt","Input","this","label","onChange","type","max","min","marginTop","width","textAlign","Form","TextArea","height","rows","placeholder","Component","vigenereCipherEncryptCalc","keyArray","j","vigenereCipherDecryptCalc","t","VignereCipher","Main","shiftCipher","onSwitch","prevState","Card","marginBottom","secondary","BackgroundImage","backgroundImage","bgImage","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8d1dbf23.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bgimage.62c93a4c.gif\";","const alphabetsArray = [];\nfor (var i = \"a\".charCodeAt(0); i <= \"z\".charCodeAt(0); i++) {\n  alphabetsArray.push(String.fromCharCode(i));\n}\nexport const shiftCipherEncryptCalc = (text, key) => {\n  const textArray = text.split(\"\");\n  let cipherTextArray = \"\";\n  for (var i = 0; i < text.length; i++) {\n    if (textArray[i] !== \" \") {\n      const newChar = (alphabetsArray.indexOf(textArray[i]) + Number(key)) % 26;\n      cipherTextArray += alphabetsArray[newChar];\n    } else {\n      cipherTextArray += \" \";\n    }\n  }\n\n  return cipherTextArray;\n};\nexport const shiftCipherDecryptCalc = (text, key) => {\n  const textArray = text.split(\"\");\n  let cipherTextArray = \"\";\n  for (var i = 0; i < text.length; i++) {\n    if (textArray[i] === \" \") {\n\n      cipherTextArray += \" \";\n\n  }\n  else if (alphabetsArray.indexOf(textArray[i]) - Number(key) < 0) {\n      const newChar =\n        (alphabetsArray.indexOf(textArray[i]) - Number(key) + 26) % 26;\n      cipherTextArray += alphabetsArray[newChar];\n    } else if (textArray[i] !== \" \") {\n      const newChar = (alphabetsArray.indexOf(textArray[i]) - Number(key)) % 26;\n      cipherTextArray += alphabetsArray[newChar];\n    } \n  }\n\n  return cipherTextArray;\n};\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport \"./button.scss\";\nconst Buttons = ({ error, encrypt, reset, decrypt }) => {\n  return (\n    <div className=\"button-div\">\n      <Button\n        onClick={encrypt}\n        disabled={error}\n        style={{ margin: \"50px\" }}\n        content=\"encrypt\"\n        primary\n      />\n      <Button\n        onClick={decrypt}\n        disabled={error}\n        style={{ margin: \"50px\" }}\n        content=\"Decrypt\"\n        color='teal'\n      />\n      <Button onClick={reset} style={{ margin: \"50px\" }} content=\"Reset\" />\n    </div>\n  );\n};\n\nexport default Buttons;\n","const alphabetsArray = [];\nfor (var i = \"a\".charCodeAt(0); i <= \"z\".charCodeAt(0); i++) {\n  alphabetsArray.push(String.fromCharCode(i));\n}\nexport const vigenereCipherEncryptCalc = (text, key) => {\n  const keyArray = key.split(\"\");\n  const textArray = text.split(\"\");\n  let cipherTextArray = \"\";\n  var j = 0;\n  for (var i = 0; i < text.length; i++) {\n    if (textArray[i] !== \" \") {\n      const newChar =\n        (alphabetsArray.indexOf(textArray[i]) +\n          alphabetsArray.indexOf(keyArray[j % keyArray.length])) %\n        26;\n      cipherTextArray += alphabetsArray[newChar];\n      j++;\n    } else {\n      cipherTextArray += \" \";\n    }\n  }\n  console.log(cipherTextArray);\n\n  return cipherTextArray;\n};\nexport const vigenereCipherDecryptCalc = (text, key) => {\n  const keyArray = key.split(\"\");\n  const textArray = text.split(\"\");\n  let cipherTextArray = \"\";\n  var t = 0;\n\n  for (var i = 0; i < text.length; i++) {\n    if (textArray[i] === \" \") {\n\n        cipherTextArray += \" \";\n\n    }\n    else if (\n      alphabetsArray.indexOf(textArray[i]) -\n        alphabetsArray.indexOf(keyArray[t % keyArray.length]) <\n      0\n    ) {\n      const newChar =\n        (alphabetsArray.indexOf(textArray[i]) -\n          alphabetsArray.indexOf(keyArray[t % keyArray.length]) +\n          26) %\n        26;\n      cipherTextArray += alphabetsArray[newChar];\n      t++;\n    } else if (textArray[i] !== \" \") {\n      const newChar =\n        (alphabetsArray.indexOf(textArray[i]) -\n          alphabetsArray.indexOf(keyArray[t % keyArray.length])) %\n        26;\n      cipherTextArray += alphabetsArray[newChar];\n      t++;\n    }\n  }\n\n  return cipherTextArray;\n};\n","import React, { Component } from \"react\";\nimport { TextArea, Input, Form } from \"semantic-ui-react\";\nimport \"./ShiftCipher.scss\";\nimport Buttons from \"../Button/Buttons\";\nimport {\n  shiftCipherEncryptCalc,\n  shiftCipherDecryptCalc\n} from \"../../utils/ShiftCipherCalc\";\n\nexport default class ShiftCipher extends Component {\n  state = {\n    key: 0,\n    text: \"\",\n    cipherValue: \"\",\n    error: false\n  };\n  onTextChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n  onInputChange = e => {\n    const { value } = e.target;\n    console.log(value);\n    if (value < 26 && value >= 0) {\n      this.setState({\n        key: value,\n        error: false\n      });\n    } else {\n      this.setState({\n        error: true\n      });\n    }\n  };\n  onReset = () => {\n    this.setState({\n      key: 0,\n      text: \"\",\n      cipherValue: \"\",\n      error: false\n    });\n  };\n  onEncrypt = () => {\n    const { text, key } = this.state;\n    this.setState({\n      cipherValue: shiftCipherEncryptCalc(text.toLowerCase(), key)\n    });\n  };\n  onDecrypt = () => {\n    const { key, cipherValue } = this.state;\n    this.setState({\n      text: shiftCipherDecryptCalc(cipherValue.toLowerCase(), key)\n    });\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"nav\">\n          <h1>SHIFT CIPHER</h1>\n        </div>\n        <div className=\"input\">\n          <Input\n            value={this.state.key}\n            label=\"KEY\"\n            error={this.state.error}\n            onChange={this.onInputChange}\n            type=\"number\"\n            max=\"25\"\n            min=\"0\"\n          />\n        </div>\n        <div className=\"labels\">\n          <h3 style={{ marginTop: \"40px\", width: \"40vw\", textAlign: \"center\" }}>\n            Plain Text\n          </h3>\n          <h3 style={{ marginTop: \"40px\", width: \"40vw\", textAlign: \"center\" }}>\n            Cipher Text\n          </h3>\n        </div>\n        <Form className=\"sc\">\n          <TextArea\n            name=\"text\"\n            style={{ width: \"45%\", height: \"70%\" }}\n            rows={8}\n            placeholder=\"Write Plain Text Here\"\n            onChange={this.onTextChange}\n            value={this.state.text}\n          />\n          <TextArea\n            onChange={this.onTextChange}\n            name=\"cipherValue\"\n            value={this.state.cipherValue}\n            style={{ width: \"45%\", height: \"70%\" }}\n            rows={8}\n            placeholder=\"Cypher Text To Be Here\"\n          />\n        </Form>\n        <Buttons\n          reset={this.onReset}\n          encrypt={this.onEncrypt}\n          error={this.state.error}\n          decrypt={this.onDecrypt}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { TextArea, Input, Form } from \"semantic-ui-react\";\nimport \"./VignereCipher.scss\";\nimport Buttons from \"../Button/Buttons\";\nimport {\n  vigenereCipherEncryptCalc,\n  vigenereCipherDecryptCalc\n} from \"../../utils/VigenereCipherCalc\";\n\nexport default class VignereCipher extends Component {\n  state = {\n    key: \"\",\n    text: \"\",\n    cipherValue: \"\",\n    error: false\n  };\n  onTextChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n  onInputChange = e => {\n    const { value } = e.target;\n    console.log(value);\n\n    this.setState({\n      key: value\n    });\n  };\n  onReset = () => {\n    this.setState({\n      key: \"\",\n      text: \"\",\n      cipherValue: \"\",\n      error: false\n    });\n  };\n  onEncrypt = () => {\n    const { text, key } = this.state;\n    this.setState({\n      cipherValue: vigenereCipherEncryptCalc(\n        text.toLowerCase(),\n        key.toLowerCase()\n      )\n    });\n  };\n  onDecrypt = () => {\n    const { key, cipherValue } = this.state;\n    this.setState({\n      text: vigenereCipherDecryptCalc(\n        cipherValue.toLowerCase(),\n        key.toLowerCase()\n      )\n    });\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"nav\">\n          <h1>VIGENERE CIPHER</h1>\n        </div>\n        <div className=\"input\">\n          <Input\n            value={this.state.key}\n            label=\"KEY\"\n            error={this.state.error}\n            onChange={this.onInputChange}\n          />\n        </div>\n        <div className=\"labels\">\n          <h3 style={{ marginTop: \"40px\", width: \"40vw\", textAlign: \"center\" }}>\n            Plain Text\n          </h3>\n          <h3 style={{ marginTop: \"40px\", width: \"40vw\", textAlign: \"center\" }}>\n            Cipher Text\n          </h3>\n        </div>\n        <Form className=\"sc\">\n          <TextArea\n            name=\"text\"\n            style={{ width: \"45%\", height: \"70%\" }}\n            rows={8}\n            placeholder=\"Write Plain Text Here\"\n            onChange={this.onTextChange}\n            value={this.state.text}\n          />\n          <TextArea\n            onChange={this.onTextChange}\n            name=\"cipherValue\"\n            value={this.state.cipherValue}\n            style={{ width: \"45%\", height: \"70%\" }}\n            rows={8}\n            placeholder=\"Cypher Text To Be Here\"\n          />\n        </Form>\n        <Buttons\n          reset={this.onReset}\n          encrypt={this.onEncrypt}\n          error={this.state.error}\n          decrypt={this.onDecrypt}\n        />\n      </div>\n    );\n  }\n}\n","import \"./main.scss\";\nimport { Card, Button } from \"semantic-ui-react\";\n\nimport ShiftCipher from \"../ShiftCipher/ShiftCipher\";\n\nimport React, { Component } from \"react\";\nimport VignereCipher from \"../VigenereCipher/VignereCipher\";\n\nexport default class Main extends Component {\n  state = {\n    shiftCipher: true\n  };\n  onSwitch = () => {\n    console.log(\"clicked\");\n    this.setState(prevState => ({\n      shiftCipher: !prevState.shiftCipher\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"main-div\">\n        <Card style={{ width: \"70vw\" }} className=\"main\">\n          {this.state.shiftCipher ? <ShiftCipher /> : <VignereCipher />}\n        <div className='button-div'>\n        <Button style={{width:'30%',marginBottom:'10px'}} secondary onClick={this.onSwitch} content=\"Switch\" />\n        </div>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport bgImage from '../../assets/bgimage.gif'\nimport Main from '../Main/Main';\nimport './bg.scss'\nconst BackgroundImage = () => {\n  return (\n    <div\nclassName='background-image'\nstyle={{backgroundImage:`url(${bgImage})`}}\n >\n    <Main/>\n    </div>\n  );\n};\n\nexport default BackgroundImage;\n","import React from 'react';\n\nimport './App.scss';\n\nimport Main from './Components/Main/Main';\nimport BackgroundImage from './Components/BackgroundImage/BackgroundImage';\n\n\n\n\n\n\n\nfunction App() {\n  return (\n<div className='app'>\n<BackgroundImage/>\n\n</div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}