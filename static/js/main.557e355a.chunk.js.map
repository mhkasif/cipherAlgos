{"version":3,"sources":["utils/ShiftCipherCalc.js","Component/Card/Nav/Nav.js","Ciphers/Ciphers.js","Component/Card/DropDown/DropDown.js","Component/Card/TextAreas/TextAreas.js","utils/VigenereCipherCalc.js","Component/Card/Button/Buttons.js","Component/Key/Key.js","Component/Card/MainCard.js","App.js","serviceWorker.js","index.js"],"names":["Nav","text","className","toUpperCase","Ciphers","key","value","DropDown","handleCipherTypeChange","Dropdown","onChange","e","d","style","width","placeholder","selection","options","TextAreas","plainText","cipherText","onTextChange","Form","margin","padding","height","marginTop","textAlign","TextArea","name","rows","alphabetsArray","i","charCodeAt","push","String","fromCharCode","Buttons","error","onEncrypt","onReset","onDecrypt","cipherType","keyVal","Button","onClick","keyArray","split","textArray","cipherTextArray","j","length","newChar","indexOf","console","log","vigenereCipherEncryptCalc","Number","shiftCipherEncryptCalc","disabled","content","primary","t","vigenereCipherDecryptCalc","shiftCipherDecryptCalc","color","type","onInputChange","Input","label","max","min","MainCard","this","props","animation","duration","visible","Transition","Card","Key","Component","App","state","setState","target","toggleVisibility","prevState","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.557e355a.chunk.js","sourcesContent":["const alphabetsArray = [];\nfor (var i = \"a\".charCodeAt(0); i <= \"z\".charCodeAt(0); i++) {\n  alphabetsArray.push(String.fromCharCode(i));\n}\nexport const shiftCipherEncryptCalc = (text, key) => {\n  const textArray = text.split(\"\");\n  let cipherTextArray = \"\";\n  for (var i = 0; i < text.length; i++) {\n    if (textArray[i] !== \" \") {\n      const newChar = (alphabetsArray.indexOf(textArray[i]) + Number(key)) % 26;\n      cipherTextArray += alphabetsArray[newChar];\n    } else {\n      cipherTextArray += \" \";\n    }\n  }\n\n  return cipherTextArray;\n};\nexport const shiftCipherDecryptCalc = (text, key) => {\n  const textArray = text.split(\"\");\n  let cipherTextArray = \"\";\n  for (var i = 0; i < text.length; i++) {\n    if (textArray[i] === \" \") {\n      cipherTextArray += \" \";\n    } else if (alphabetsArray.indexOf(textArray[i]) - Number(key) < 0) {\n      const newChar =\n        (alphabetsArray.indexOf(textArray[i]) - Number(key) + 26) % 26;\n      cipherTextArray += alphabetsArray[newChar];\n    } else if (textArray[i] !== \" \") {\n      const newChar = (alphabetsArray.indexOf(textArray[i]) - Number(key)) % 26;\n      cipherTextArray += alphabetsArray[newChar];\n    }\n  }\n\n  return cipherTextArray;\n};\n","import React from \"react\";\nimport \"../../../styles/Nav.scss\";\nconst Nav = ({ text }) => {\n  return <div className=\"nav\">{text?text.toUpperCase():'Cryptonic'}</div>;\n};\n\nexport default Nav;\n","export const Ciphers = [\n  {\n    key: \"shiftCipher\",\n    text: \"shift Cipher\",\n    value: \"shift cipher\"\n  },\n  {\n    key: \"vigenereCipher\",\n    text: \"vigenere Cipher\",\n    value: \"vigenere cipher\"\n  },\n  {\n    key: \"substitutionCipher\",\n    text: \"substitutionCipher\",\n    value: \"substitution cipher\"\n  },\n  {\n    key: \"playFairCipher\",\n    text: \"playFair Cipher\",\n    value: \"playFair cipher\"\n  }\n];\n","import React from \"react\";\n\nimport { Dropdown } from \"semantic-ui-react\";\nimport { Ciphers } from \"../../../Ciphers/Ciphers\";\nimport \"../../../styles/dropdown.scss\";\nconst DropDown = ({ handleCipherTypeChange }) => (\n  <div className=\"dropdown\">\n    <Dropdown\n      onChange={(e, d) => handleCipherTypeChange(d.value)}\n      style={{ width: \"50%\" }}\n      placeholder=\"Select Cipher\"\n      selection\n      options={Ciphers}\n    />\n  </div>\n);\n\nexport default DropDown;\n","import React from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport { TextArea } from \"semantic-ui-react\";\nimport \"../../../styles/text-area-container.scss\";\nconst TextAreas = ({ plainText, cipherText, onTextChange }) => {\n  return (\n    <Form style={{ margin: \"0px\", padding: \"0px\", height: \"100%\" }}>\n      <div className=\"labels\">\n        <h3 style={{ marginTop: \"40px\", width: \"40vw\", textAlign: \"center\" }}>\n          Plain Text\n        </h3>\n        <h3 style={{ marginTop: \"40px\", width: \"40vw\", textAlign: \"center\" }}>\n          Cipher Text\n        </h3>\n      </div>\n      <div className=\"text-area-container\">\n        <TextArea\n          name=\"plainText\"\n          style={{ width: \"45%\", height: \"150%\" }}\n          rows={8}\n          placeholder=\"Write Plain Text Here\"\n          onChange={onTextChange}\n          value={plainText}\n        />\n        <TextArea\n          onChange={onTextChange}\n          name=\"cipherText\"\n          value={cipherText}\n          style={{ width: \"45%\", height: \"150%\" }}\n          rows={8}\n          placeholder=\"Cypher Text To Be Here\"\n        />\n      </div>\n    </Form>\n  );\n};\n\nexport default TextAreas;\n","const alphabetsArray = [];\nfor (var i = \"a\".charCodeAt(0); i <= \"z\".charCodeAt(0); i++) {\n  alphabetsArray.push(String.fromCharCode(i));\n}\nexport const vigenereCipherEncryptCalc = (text, key) => {\n  const keyArray = key.split(\"\");\n  const textArray = text.split(\"\");\n  let cipherTextArray = \"\";\n  var j = 0;\n  for (var i = 0; i < text.length; i++) {\n    if (textArray[i] !== \" \") {\n      const newChar =\n        (alphabetsArray.indexOf(textArray[i]) +\n          alphabetsArray.indexOf(keyArray[j % keyArray.length])) %\n        26;\n      cipherTextArray += alphabetsArray[newChar];\n      j++;\n    } else {\n      cipherTextArray += \" \";\n    }\n  }\n  console.log(cipherTextArray);\n\n  return cipherTextArray;\n};\nexport const vigenereCipherDecryptCalc = (text, key) => {\n  const keyArray = key.split(\"\");\n  const textArray = text.split(\"\");\n  let cipherTextArray = \"\";\n  var t = 0;\n\n  for (var i = 0; i < text.length; i++) {\n    if (textArray[i] === \" \") {\n\n        cipherTextArray += \" \";\n\n    }\n    else if (\n      alphabetsArray.indexOf(textArray[i]) -\n        alphabetsArray.indexOf(keyArray[t % keyArray.length]) <\n      0\n    ) {\n      const newChar =\n        (alphabetsArray.indexOf(textArray[i]) -\n          alphabetsArray.indexOf(keyArray[t % keyArray.length]) +\n          26) %\n        26;\n      cipherTextArray += alphabetsArray[newChar];\n      t++;\n    } else if (textArray[i] !== \" \") {\n      const newChar =\n        (alphabetsArray.indexOf(textArray[i]) -\n          alphabetsArray.indexOf(keyArray[t % keyArray.length])) %\n        26;\n      cipherTextArray += alphabetsArray[newChar];\n      t++;\n    }\n  }\n\n  return cipherTextArray;\n};\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport \"../../../styles/button.scss\";\nimport { shiftCipherEncryptCalc, shiftCipherDecryptCalc } from \"../../../utils/ShiftCipherCalc\";\nimport { vigenereCipherEncryptCalc, vigenereCipherDecryptCalc } from \"../../../utils/VigenereCipherCalc\";\nconst Buttons = ({\n  error,\n  onEncrypt,\n  onReset,\n  onDecrypt,\n  cipherType,\n  keyVal,\n  plainText,\n  cipherText\n}) => {\n  const CurrentEncryptCipher = () => {\n    switch (cipherType) {\n      case \"vigenere cipher\":\n        onEncrypt(vigenereCipherEncryptCalc(plainText, keyVal));\n\n        break;\n\n      case \"playFair cipher\":\n        console.log(\"playfair cipher\");\n        break;\n      case \"substitution cipher\":\n        break;\n\n      default:\n        onEncrypt(shiftCipherEncryptCalc(plainText, keyVal));\n    }\n  };\n  const CurrentDecryptCipher = () => {\n    switch (cipherType) {\n      case \"vigenere cipher\":\n        onDecrypt(vigenereCipherDecryptCalc(cipherText, keyVal));\n\n        break;\n\n      case \"playFair cipher\":\n        console.log(\"playfair cipher\");\n        break;\n      case \"substitution cipher\":\n        break;\n\n      default:\n        onDecrypt(shiftCipherDecryptCalc(cipherText, keyVal));\n    }\n  };\n  return (\n    <div className=\"button-div\">\n      <Button\n        onClick={CurrentEncryptCipher}\n        disabled={error}\n        style={{ margin: \"50px\" }}\n        content=\"encrypt\"\n        primary\n      />\n      <Button\n        onClick={CurrentDecryptCipher}\n        disabled={error}\n        style={{ margin: \"50px\" }}\n        content=\"Decrypt\"\n        color=\"teal\"\n      />\n      <Button onClick={onReset} style={{ margin: \"50px\" }} content=\"Reset\" />\n    </div>\n  );\n};\n\nexport default Buttons;\n","import React from \"react\";\nimport { Input } from \"semantic-ui-react\";\n\nimport \"../../styles/key.scss\";\n\nconst keyVal = ({ type, keyVal, onInputChange, error }) => {\n  return (\n    <div className=\"input\">\n      {type ? (\n        <Input\n          value={keyVal}\n          label=\"KEY\"\n          error={error}\n          onChange={onInputChange}\n          type=\"number\"\n          max=\"25\"\n          min=\"0\"\n        />\n      ) : (\n        <Input value={keyVal} label=\"KEY\" error={error} onChange={onInputChange} />\n      )}\n    </div>\n  );\n};\n\nexport default keyVal;\n","import React, { Component } from \"react\";\nimport { Transition } from \"semantic-ui-react\";\nimport { Card } from \"semantic-ui-react\";\nimport Nav from \"./Nav/Nav\";\nimport DropDown from \"./DropDown/DropDown\";\nimport TextAreas from \"./TextAreas/TextAreas\";\nimport \"../../styles/main-card.scss\";\nimport Buttons from \"./Button/Buttons\";\nimport Key from \"../Key/Key\";\n\nexport default class MainCard extends Component {\n  render() {\n    const {\n      cipherType,\n      cipherText,\n      plainText,\n      error,\n      onReset,\n      onTextChange,\n      keyVal,\n      onInputChange,\n      handleCipherTypeChange,\n      onEncrypt,\n      onDecrypt,\n      animation,\n      duration,\n      visible\n    } = this.props;\n\n    return (\n      <Transition animation={animation} duration={duration} visible={visible}>\n        <Card style={{ width: \"70vw\", height: \"70vh\" }}>\n          <Nav text={cipherType} />\n          <DropDown handleCipherTypeChange={handleCipherTypeChange} />\n          <Key\n            type={cipherType === \"shift cipher\" ? \"number\" : \"\"}\n            keyVal={keyVal}\n            onInputChange={onInputChange}\n            error={error}\n          />\n          <TextAreas\n            onTextChange={onTextChange}\n            cipherText={cipherText}\n            plainText={plainText}\n          />\n          <Buttons\n            plainText={plainText}\n            cipherText={cipherText}\n            keyVal={keyVal}\n            onEncrypt={onEncrypt}\n            onDecrypt={onDecrypt}\n            cipherType={cipherType}\n            error={error}\n            onReset={onReset}\n          />\n        </Card>\n      </Transition>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport \"./App.scss\";\nimport MainCard from \"./Component/Card/MainCard\";\n\n\nexport default class App extends Component {\n  state = {\n    cipherType: \"\",\n    keyVal: 0,\n    plainText: \"\",\n    cipherText: \"\",\n    error: true,\n    animation: \"tada\",\n    duration: 500,\n    visible: true\n  };\n  handleCipherTypeChange = cipherType => {\n    this.setState({\n      cipherType\n    });\n  };\n  onTextChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n      error:false\n\n    });\n  };\n  onReset = () => {\n    this.setState({\n      keyVal: 0,\n      plainText: \"\",\n      cipherText: \"\",\n      error: true\n    });\n  };\n  onInputChange = e => {\n    const { value } = e.target;\n    if (this.state.cipherType === \"shift cipher\") {\n\n      if (value < 26 && value >= 0) {\n        this.setState({\n          keyVal: value,\n          error: false\n        });\n      } else {\n        this.toggleVisibility();\n        this.setState({\n          error: true\n        });\n      }\n    } else\n      this.setState({\n        keyVal: value,\n        error: false\n      });\n  };\n  onEncrypt = cipherText => {\n    // const { text, keyVal } = this.state;\n    this.setState({\n      cipherText\n    });\n  };\n  onDecrypt = plainText => {\n    // const { keyVal, cipherValue } = this.state;\n    this.setState({\n      plainText\n    });\n  };\n  toggleVisibility = () =>\n    this.setState(prevState => ({ visible: !prevState.visible }));\n  render() {\n    const {\n      cipherType,\n      keyVal,\n      cipherText,\n      plainText,\n      animation,\n      duration,\n      visible\n    } = this.state;\n\n    return (\n      <div className=\"app\">\n        <MainCard\n          animation={animation}\n          duration={duration}\n          visible={visible}\n          keyVal={keyVal}\n          plainText={plainText}\n          onInputChange={this.onInputChange}\n          cipherType={cipherType}\n          onTextChange={this.onTextChange}\n          onReset={this.onReset}\n          cipherText={cipherText}\n          handleCipherTypeChange={this.handleCipherTypeChange}\n          onEncrypt={this.onEncrypt}\n          onDecrypt={this.onDecrypt}\n        />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}